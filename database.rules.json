{
  "rules": {
    "org-infos": {
      ".read": "auth != null",
      ".write": "false"
    },
    "orgs":{
      "$org": {
        "players": {
          ".read": "auth != null",
          ".indexOn": "rated",
          "$uid": {
            "active": {
              ".write": "$uid === auth.uid"
            }
          }
        },
        "open-match-details": {
          "$uid": {
            ".read": "auth.uid === data.child('player1Uid').val() || auth.uid === data.child('player2Uid').val()",
            "scores": {
              ".write": "auth.uid === data.parent().child('player1Uid').val() || auth.uid === data.parent().child('player2Uid').val()"
            },
            "removed": {
              ".write": "auth.uid === data.parent().child('player1Uid').val() || auth.uid === data.parent().child('player2Uid').val()"
            },
            "approvals": {
              "player1": {
                ".write": "auth.uid === data.parent().parent().child('player1Uid').val()",
                ".validate": "newData.isString() && newData.val().matches(/^()|(|[0-9]{1,2}){2}|(|[0-9]{1,2}){6}|(|[0-9]{1,2}){10}$/i)"
              },
              "player2": {
                ".write": "auth.uid === data.parent().parent().child('player2Uid').val()",
                ".validate": "newData.isString() && newData.val().matches(/^()|(|[0-9]{1,2}){2}|(|[0-9]{1,2}){6}|(|[0-9]{1,2}){10}$/i)"
              }
            }
          }
        },
        "matches": {
          ".read": "auth != null",
          ".write": false,
          ".indexOn": "finalizedDate"
        },
        "player-matches": {
          "$uid": {
            ".read": "auth != null",
            ".write": false
          }
        },
        "player-open-matches": {
          "$uid": {
            ".read": "$uid === auth.uid",
            ".write": false
          }
        },
        "admin" : {
          ".read": "auth != null && root.child('users').child(auth.uid).child('orgs').child($org).val() === true",
          ".write": "auth != null && root.child('users').child(auth.uid).child('orgs').child($org).val() === true"
        }
      }
    },
    "messaging": {
      "$uid": {
        ".read": "$uid === auth.uid",
        ".write": "$uid === auth.uid"
      }
    },
    "users": {
      "$uid": {
        ".read": "$uid === auth.uid"
      }
    }
  }
}
